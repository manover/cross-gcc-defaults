#!/usr/bin/make -f
# -*- makefile -*-

# Adjust these when we want to control which packages we release and the links they contain
RELEASE := 5
PKGS    := cpp gcc g++ gfortran gobjc gccgo

PROGS_IN_cpp       := cpp
PROGS_IN_gcc       := gcc gcc-ar gcc-ranlib gcc-nm
PROGS_IN_g++       := g++
PROGS_IN_gfortran  := gfortran
PROGS_IN_gobjc     := gobjc
PROGS_IN_gccgo     := gccgo





# this is there so that generate-pkgfiles.pl can ask about it
say_pkgs_release:
	@echo $(PKGS) $(RELEASE)
.PHONY: say_pkgs_release


# To build a second cross-gcc-defaults upload for the same major gcc release (4.9,
# 5, etc), we increment the SUFFIX env var (or set it in rules, but then remember
# to reset it for next time), thus:
#
#   SUFFIX=2 dpkg-buildpackage
#
# This will add -2 to the version number of the binary metapackages so they don't
# clash with the previous upload(s). If unset we assume this is the first upload
# for a given gcc release, so SUFFIX=1
SUFFIX ?= 1


#export DH_VERBOSE=1
%:
	dh $@

override_dh_auto_build:
	grep Package: debian/control | cut -d ' ' -f 2 | xargs -I{} cp debian/lintian-overrides debian/{}.lintian-overrides

override_dh_auto_configure:
override_dh_auto_test:

override_dh_installchangelogs:
	dh_installchangelogs
	find debian -name changelog \! -wholename debian/changelog | xargs -I{} mv {} {}.Debian


# I get the arches based on what's in my debian/control file
ARCHES_GNU_TYPE := \
  $(shell perl -ne \
    'if(/Package: *[a-z0-9+_-]+-([a-z0-9+_-]+-[a-z0-9+_-]+-[a-z0-9+_-]+)/) {print "$$1\n";}' \
    < debian/control | uniq)

override_dh_auto_install:
	$(foreach arch,$(ARCHES_GNU_TYPE),\
	    $(foreach pkg,$(PKGS),\
	        $(foreach prog,$(PROGS_IN_$(pkg)),\
	            dh_link -p$(pkg)-$(arch) usr/bin/$(arch)-$(prog)-$(RELEASE) usr/bin/$(arch)-$(prog);)))

override_dh_clean:
	dh_clean
	rm -f debian/*.lintian-overrides


override_dh_gencontrol:
	dh_gencontrol -- -v$(RELEASE)-$(SUFFIX) -Vver=$(RELEASE)

control:
	debian/generate-pkgfiles.pl

.PHONY: control
